{
  "template": {
    "taskId": "7b45a207-afc1-4c77-8553-5dd7a7b96d89",
    "name": "JSX Walk-Through Practice (Part 2)",
    "repo": "Modular-Curriculum",
    "path": "content/react-redux/topics/intro-to-react/projects/pet-detail-page-jsx/README-02-create-navigation-component.md",
    "type": "Reading",
    "timeEstimate": 1800,
    "urls": [
      "jsx-walk-through-part-2"
    ],
    "topic": "Tuesday - React!",
    "subtopic": "JSX Project",
    "body": "# JSX Walk-Through: Navigation Component\n\nYou will now work on creating the PetTrack page.\n\n* `PetDetailPage`: Created in this step\n* `Navigation`: Created in this step\n* `PetDetails`\n* `PetDetailList`\n* `PetInformationItem`\n* `OwnersList`\n* `OwnerLink`\n\n![Petrack component analysis]\n\n## The strategy\n\nThis guide will work top-down, in that it will start with the top-most (or\nouter-most) component, the `PetDetailPage` component. Then, it will move to\na next level component, like `Navigation`. It will just keep adding components\nand getting them to work with the data from the AJAX call.\n\n## The pet detail page component\n\nThe `PetDetailPage` component will be responsible for showing the navigation\ncomponent, the details list component, and the owners list component. None of\nthose exist, yet, so just stub out a new component to hold the source.\n\nCreate a new file named **PetDetailPage.js** in the **src** directory. In that\nfile, type this content into it.\n\n```jsx\nimport React from 'react';\n\nconst PetDetailPage = () =>\n  <div>PetDetailPage component</div> // Temporary so it builds\n;\n\nexport default PetDetailPage;\n```\n\nHere's some analysis.\n\n### The import statement\n\nYou will notice that the top of the file imports the `React` object, but you do\nnot use it anywhere in the file! You have to do this because, remember, each\nJSX element, like `<header>...</header>`, ends up getting translated to\n`React.createElement` calls. Without the `import` statement, the `React` object\nwould not exist and compiling would fail.\n\n### The component\n\nThe `const PetDetailPage = () => ...` is just a normal arrow function.\n\nThe body of the component is a JSX expression `<div></div>` which Babel will\ntranslate into an invocation of `React.createElement`. Here's what it looks like\nafter passing through Babel.\n\n```js\nvar PetDetailPage = function PetDetailPage() {\n  return React.createElement(\"div\", null, \"PetDetailPage component\");\n} // Temporary so it builds\n;\n```\n\n### The export statement\n\nThis is just so you can import it into other components for use, which you will\ndo now.\n\n## Using the pet detail page component\n\nOpen up **src/App.js**. Import the newly-created `PetDetailPage` component.\nRemember that this is Webpack that's doing this for you, so you _do not_ need\nto put the **.js** extension on the name of the module that you import.\n\nReplace the `<h1>Hello</h1>` with `<PetDetailPage></PetDetailPage>`. Save all of\nyour files. You should now see this content in your browser and _Components_\ntab.\n\n![Petrack with default PetDetailPage]\n\nThe content of the **src/App.js** should look similar to this.\n\n```jsx\nimport React from 'react';\n\nimport PetDetailPage from './PetDetailPage';\n\nfunction App() {\n  return (\n    <PetDetailPage></PetDetailPage>\n  );\n}\n\nexport default App;\n```\n\nSince `PetDetailPage` has no child content, you could also write that code\nlike this, with the ending slash.\n\n```jsx\nimport React from 'react';\n\nimport PetDetailPage from './PetDetailPage';\n\nfunction App() {\n  return (\n    <PetDetailPage />\n  );\n}\n\nexport default App;\n```\n\n\n## The navigation component\n\nCreate a new file named **Navigation.js** in the **src** directory of your\napplication. Put this content in there. Please type it rather than copy and\npaste it.\n\n```jsx\nimport React from 'react';\n\nconst Navigation = () =>\n  <header>\n    <h1>Petrack</h1>\n    <nav>\n      <ul>\n        <li>\n          <a href=\"/pets\">Pets</a>\n        </li>\n        <li>\n          <a href=\"/owners\">Owners</a>\n        </li>\n      </ul>\n    </nav>\n  </header>\n;\n\nexport default Navigation;\n```\n\nAll of the JSX, the html-looking tags, those get converted into the calls to\n`React.createElement`. When Babel gets done with it, it looks like this, which\nis just an ugly version of one call to `React.createElement` for each of the\nelements in the JSX.\n\n```js\nvar Navigation = function Navigation() {\n  return React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Petrack\"), React.createElement(\"nav\", null, React.createElement(\"ul\", null, React.createElement(\"li\", null, React.createElement(\"a\", {\n    href: \"/pets\"\n  }, \"Pets\")), React.createElement(\"li\", null, React.createElement(\"a\", {\n    href: \"/owners\"\n  }, \"Owners\")))));\n};\n```\n\n## Using the navigation component\n\nBack in the **src/PetDetailPage.js** file, import the `Navigation` component and\nreplace the `<div>PetDetailPage component</div>` with the `Navigation` component\nmuch like you did in the `App` component with `PetDetailPage`.\n\nOnce you save your files, you should see the navigation.\n\n![PetDetailPage navigation complete]\n\n## What just happened?\n\nYou created two new components and added them to the **src** directory. You\nimported them so that other components could use them. It was fast and easy and\n(hopefully) painless. JSX is lovely to work with, far easier than the calls to\n`React.createElement` if that didn't exist.\n\n\n[Petrack component analysis]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/react-redux/topics/intro-to-react/assets/pettrack-pet-detail-all-components-with-details-list.png\n[PetDetailPage navigation complete]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/react-redux/topics/intro-to-react/assets/react-pet-detail-page-nav-complete.png\n[Petrack with default PetDetailPage]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/react-redux/topics/intro-to-react/assets/create-react-app-with-default-pet-detail-page.png\n"
  },
  "success": true
}