{
  "template": {
    "taskId": "0eb1d515-0dc0-471a-8968-3c60b46724d4",
    "name": "Heroku And You",
    "repo": "Modular-Curriculum",
    "path": "content/course/topics/group-projects/readings/reading-heroku-and-you.md",
    "type": "Reading",
    "timeEstimate": 0,
    "urls": [
      "heroku-and-you"
    ],
    "topic": "Thursday",
    "subtopic": "Practices",
    "body": "# Heroku And You\n\nIn the old days, developers would host websites with Apache running on a\ndedicated computer in a closet plugged into their home internet. These days,\nyou can use services like Heroku to host your server code. Heroku is a distributed\ncloud platform with massive data centers containing racks of enormously powerful\nCPUs, tremendous bandwidth and a 24/7 team of dedicated maintenance engineers.\n\nYou can get access to all that power for free, or a tiny fraction of the cost.\nThere are different tiers that provide more computing power, storage space, and\nanalytics, but for your purposes the free dev tier will be sufficient.\n\n## Heroku\n\nHeroku has great step-by-step instructions for you to follow to get set up and\ndeployable. In the following sections, we provide specific instructions for how\nto get your app (and Heroku) set up for a Node.js, Express.js, and Sequelize\npowered app.\n\nIf you'd like to practice deploying an app to Heroku, clone the [Twitter Lite\nWalk-through repository] and follow the deployment steps below.\n\n## Step 1: Getting started on Heroku\n\n1. Install the [Heroku CLI]. (For WSL users, see \"Standalone Installation\" \n   instructions)\n2. Create your [free Heroku account].\n3. Log in and [create a new Heroku app].\n\n**Note**: For your group projects, the owner of the GitHub repository should\ncreate the Heroku app.\n\n![heroku-step-1][heroku-step-1]\n\n## Step 2: Database\n\nAfter creating your Heroku app, navigate to the **Resources** tab and set up a\n`Heroku Postgres` database for your application.\n\n![heroku-step-2][heroku-step-2]\n\nSelect the `Hobby Dev - Free` plan.\n\n![heroku-step-3][heroku-step-3]\n\n## Step 3: Environment variables\n\nIn Heroku, you can set `Config Vars` instead to set your production\nenvironment's environment variables. Environment variables set in a `.env` file\nwon't work on Heroku. Remember that you should **NEVER** check in `.env` files\nor any private keys - always keep your credentials safe from malicious users!\n\nNavigate to the **Settings** tab to `Reveal Config Vars` and set the environment\nvariables needed to run your application.\n\n![heroku-step-4][heroku-step-4]\n\nYou'll see that your `DATABASE_URL` environment variable is already set. This\nwas done when you set up the `Heroku Postgres` database in the previous step.\nThe `DATABASE_URL` takes care of your database credentials - this means you\ndon't need to set a `DB_USERNAME`, `DB_PASSWORD`, or `DB_DATABASE`. Remember to\nset the other environment variables needed for your application (i.e. API keys\nor `JWT_SECRET` if you used JSON Web Tokens to allow for user login).\n\n![heroku-step-5][heroku-step-5]\n\n## Step 4: Configure your app to use the Heroku Postgres database\n\nNow that you have a Heroku database configured, you'll need to tell your\napplication how to use it. There are two ways to configure your `production`\nenvironment: with **dotenv** and a `.sequelizerc` file that points to a\n`config/database.js` file **or** the Sequelize CLI's auto-generated\n`config.json` file.\n\n### With .sequelizerc and dotenv\n\nIf you're using the **dotenv** package with a `.sequelizerc` file, you can\nupdate your `config/database.js` file with a `production` key, like in [this\ncommit][deploy-commit].\n\nYour application would reference `use_env_variable` to reference the\n`DATABASE_URL` set by Heroku in your `Config Vars`. The `module.exports` in your\n`config/database.js` file should look something like this:\n\n```js\nmodule.exports = {\n  development: {\n    username,\n    password,\n    database,\n    host,\n    dialect: 'postgres',\n  },\n  production: {\n    use_env_variable: 'DATABASE_URL',\n    dialect: 'postgres',\n    seederStorage: 'sequelize',\n  }\n};\n```\n\n### With Sequelize CLI's config.json\n\nIf you're using Sequelize and its **config.json** file, then you should\nchange the \"production\" entry to look like this.\n\n```json\n\"production\": {\n  \"dialect\": \"postgres\",\n  \"seederStorage\": \"sequelize\",\n  \"use_env_variable\": \"DATABASE_URL\"\n}\n```\n\n## Step 5: Push to Heroku\n\nPushing your code to Heroku is similar to pushing your code to Github. Follow\nthe steps outlined below to set up your Heroku app as a **git remote** and push\nusing the Heroku CLI. (**Note**: you can also find these steps in the `Deploy\nusing Heroku Git` section under the **Deploy** tab.)\n\n1. Make sure you are in the root of your repository directory and log into\n   Heroku with `heroku login`.\n2. Add a new remote to your GitHub configuration with `heroku git:remote -a\n   «your-app-name»`.\n3. Add all your changes with `git add .`.\n4. Commit your changes with a message with `git commit -m`. (Alternatively, you\n   can use `git commit -am` to `add` and `commit` in the same command.)\n5. Push your changes to Heroku with `git push heroku`!\n\n![heroku-step-6][heroku-step-6]\n\nIf everything works, you should see a successful build message.\n\n```\nEnumerating objects: 56, done.\nCounting objects: 100% (56/56), done.\nDelta compression using up to 12 threads\nCompressing objects: 100% (50/50), done.\nWriting objects: 100% (56/56), 28.60 KiB | 4.08 MiB/s, done.\nTotal 56 (delta 11), reused 0 (delta 0)\nremote: Compressing source files... done.\nremote: Building source:\nremote:\nremote: -----> Node.js app detected\nremote:\nremote: -----> Creating runtime environment\nremote:\nremote:        NPM_CONFIG_LOGLEVEL=error\nremote:        NODE_ENV=production\nremote:        NODE_MODULES_CACHE=true\nremote:        NODE_VERBOSE=false\nremote:\nremote: -----> Installing binaries\nremote:        engines.node (package.json):  unspecified\nremote:        engines.npm (package.json):   unspecified (use default)\nremote:\nremote:        Resolving node version 12.x...\nremote:        Downloading and installing node 12.16.2...\nremote:        Using default npm version: 6.14.4\nremote:\nremote: -----> Installing dependencies\nremote:        Installing node modules (package.json + package-lock)\nremote:\nremote:        > core-js@2.6.11 postinstall /tmp/build_b1c9c6698f55a0ef025fdf935a601ccd/node_modules/core-js\nremote:        > node -e \"try{require('./postinstall')}catch(e){}\"\nremote:\nremote:        added 232 packages from 299 contributors and audited 583 packages in 7.55s\nremote:\nremote:        4 packages are looking for funding\nremote:          run `npm fund` for details\nremote:\nremote:        found 1 low severity vulnerability\nremote:          run `npm audit fix` to fix them, or `npm audit` for details\nremote:\nremote: -----> Build\nremote:\nremote: -----> Caching build\nremote:        - node_modules\nremote:\nremote: -----> Pruning devDependencies\nremote:        audited 583 packages in 2.016s\nremote:\nremote:        4 packages are looking for funding\nremote:          run `npm fund` for details\nremote:\nremote:        found 1 low severity vulnerability\nremote:          run `npm audit fix` to fix them, or `npm audit` for details\nremote:\nremote: -----> Build succeeded!\nremote: -----> Discovering process types\nremote:        Procfile declares types     -> (none)\nremote:        Default types for buildpack -> web\nremote:\nremote: -----> Compressing...\nremote:        Done: 27.4M\nremote: -----> Launching...\nremote:        Released v5\nremote:        https://«your-app-name».herokuapp.com/ deployed to Heroku\nremote:\nremote: Verifying deploy... done.\nTo https://git.heroku.com/«your-app-name».git\n```\n\n## Step 6: Run migrations on Heroku\n\nWhen you want to migrate your `Heroku Postgres` database, you'll need to run the\nmigration command prefaced with `heroku run` from inside your repository.\n\n```shell\nheroku run npx sequelize-cli db:migrate\n```\n\nYou should see the normal output from the Sequelize CLI.\n\nIf you need to seed, run the seed command prefaced with `heroku run` as well.\n\n```shell\nheroku run npx sequelize-cli db:seed:all\n```\n\nYou should see the normal output from the Sequelize CLI.\n\nIf you ever need to roll back, **DO NOT DROP YOUR DATABASE**! Instead, migrate\ndown and up.\n\n```shell\nheroku run npx sequelize-cli db:seed:undo:all\nheroku run npx sequelize-cli db:migrate:undo:all\nheroku run npx sequelize-cli db:migrate\nheroku run npx sequelize-cli db:seed:all\n```\n\nIf undoing the migrations and seeds don't work, you can reset the entire\ndatabase by removing and adding the `Heroku Postgres` add-on that you added in \nthe beginning of Step 2. Then migrate and seed again.\n\n## Step 7: Additional pushes to Heroku\n\nBefore pushing to Heroku again in the future, you **must** add and commit your\nchanges. Your general workflow should be something like this:\n\n1. Team member commits and pushes an update\n1. Somebody reviews and merges the Pull Request to the repository's base branch.\n1. The \"Team Lead\" pulls the latest code\n1. The \"Team Lead\" pushes the code to Heroku using the command `git push heroku`\n1. The person that deploys the app should run any new database migrations. See\n   the next section for that.\n\nYou can push non-master branches to Heroku by aliasing your branch to be the\nmaster branch when pushing like so:\n\n```\ngit push heroku <branch-name>:master\n```\n\n[Heroku CLI]: https://devcenter.heroku.com/articles/heroku-cli\n[free Heroku account]: https://signup.heroku.com/dc\n[create a new Heroku app]: https://dashboard.heroku.com/new-app\n[Twitter Lite Walk-through repository]: https://github.com/ssoonmi/twitter-lite-walkthrough\n[heroku-step-1]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/express/topics/heroku-deployment/heroku-1.png\n[heroku-step-2]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/express/topics/heroku-deployment/heroku-2.png\n[heroku-step-3]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/express/topics/heroku-deployment/heroku-3.png\n[heroku-step-4]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/express/topics/heroku-deployment/heroku-4.png\n[heroku-step-5]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/express/topics/heroku-deployment/heroku-5.png\n[heroku-step-6]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/express/topics/heroku-deployment/heroku-6.png\n[deploy-commit]: https://github.com/ssoonmi/twitter-lite-walkthrough/pull/22/commits/f52c740889395958642ef6db7a4b89e72c0eb9bd\n"
  },
  "success": true
}