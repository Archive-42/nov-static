{
  "template": {
    "taskId": "2a2ec9f0-cd66-44c7-ac71-0b051d31676a",
    "name": "WebSockets Client-Side",
    "repo": "Modular-Curriculum",
    "path": "content/react-redux/topics/websockets/readings/reading-websocket-client-apps-js.md",
    "type": "Reading",
    "timeEstimate": 1800,
    "urls": [
      "websockets-client-side"
    ],
    "topic": "Homework for Friday",
    "subtopic": "Homework",
    "body": "# WebSocket Client Applications\n\nWebSockets enable two-way communication between the user's browser (the client)\nand a server. Normally, the server only responds to client requests. When using\nWebSockets, once the client has opened a connection with the server, the server\ncan send messages to the client.\n\nA good place to start learning about Websockets on the Web is with the\n[Writing WebSocket client applications][mdn ws client apps] article on MDN web\ndocs.\n\nAfter reading this article, you should be able to:\n\n* Use the WebSockets API to create a new WebSocket connection to a server;\n* Create a WebSocket `onopen` event handler function to detect when the\n  connection has been opened;\n* Create a WebSocket `onmessage` event handler function to detect and process\n  messages sent by the server;\n* Create a WebSocket `onerror` event handler function to detect when an error\n  has occurred;\n* Use the WebSocket `send()` method to send messages to the server;\n* Recall that WebSocket message data can be sent as JSON formatted string;\n* Recall that WebSocket messages usually have a \"type\" associated with them so\n  the client can determine how to process them;\n* Use the WebSocket `close()` method to close the connection to the server; and\n* Create a WebSocket `onclose` event handler function to detect when the\n  connection to the server has been closed.\n\n[mdn ws client apps]: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications\n"
  },
  "success": true
}