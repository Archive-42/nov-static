{
  "template": {
    "taskId": "845ec20c-dab3-4694-8057-0357eb80d54b",
    "name": "Python Documentation",
    "repo": "Modular-Curriculum",
    "path": "content/python/topics/welcome/readings/reading-documentation-py.md",
    "type": "Reading",
    "timeEstimate": 600,
    "urls": [
      "python-documentation"
    ],
    "topic": "Monday",
    "subtopic": "Lecture",
    "body": "# Using Documentation\n\nMany seasoned developers rely on documentation and references to get their\nwork done quickly and efficiently. This is because it is better to utilize\nbuilt-in functionality whenever possible as it will be well-tested by others\nover the years.\n\nWhen you complete this lesson, you should be able to find the best resources for\nPython documentation.\n\n## Online docs\n\nFor Python, the best resource is the [Official Docs][1] produced by the team\nthat created the language and continues to update it even today.\n\n![Screen shot of Python documentation homepage][3]\n\nOn the left you'll find a way to get to previous versions in case\nthe team you are working on needs to maintain older software.\n\n**Note**: It's very important that you refer to Python documentation that is for\n_version 3_. Python 2 is end-of-life which means that it will no longer be\nsupported in the near future.\n\n*Quick search* on the top right will be one of your common spots to go.\nEntering a term followed by ENTER (or clicking *Go*) leaves the main page.\nYou can return at any time by clicking the *Documentation* link in the\nheader (after the documentation language and Python version number).\n\nJust to get a feel for the documentation, try to find the documentation for\n**Numeric types** in the standard library starting from the documentation's home\npage. Look at the table of contents and determine where you think you should go.\nOr, use that handy search box. When you find it, note the difference between\nthe numeric types in Python and the one single numeric type in JavaScript, the\n`Number`.\n\n## Downloadable reference\n\nOne of the most useful links is right at the top of the left menu on the main\npage: [Download these documents][2]. This takes you to a page where you get\nPDF and EPUB versions of the files. If you download the *PDF Download* and\nunzip it, you'll find many files. Most developers keep \"library.pdf\" at their\nfingertips. (Electronically, that is, since it's over 2000 pages!)\n\nA quick glance at the table of contents in *library.pdf* shows\n\n* Built-in Functions\n* Built-in Constants\n* Built-in Types\n* Built-in Expressions\n\nGo to the table of contents in *library.pdf* and click *Built-in Functions* and\nyou'll jump right there. Now you have quick access to a list of variable and\nfunction names to avoid using in your code. Unless you like a debugging\nchallenge!\n\n## Documentation viewer\n\nYou can also download and install a documentation viewer like [Zeal][4]. It is\nan open-source windowed documentation viewer for Windows, Linux, and macOS.\n\nThere are also commercial versions of this type of application available for\nmacOS and Windows. (**Note**: App Academy does not endorse either of these\nproducts. They are just worth knowing about if you want to know about them.)\n\n* [Dash for macOS][5]\n* [Velocity for Windows][6]\n\nThese viewers have documentation for lots of different languages and frameworks,\nnot just Python.\n\n# Use cases\n\nAll three of these options are good for their own purpose.\n\nWhen you know a function name or specific concept, the PDF works great. When\nyou know a concept from another language, sometimes the online gets you closer.\nWhen you are offline and want more structure than a PDF can give you, then one\nof the document viewers are pretty good.\n\n## What you've learned\n\nIn this article, you learned about different ways to access the Python\ndocumentation.\n\nCongratulations! You now have the best link to Python documentation.\nHopefully youâ€™ve bookmarked it in your browser already! Likewise, you can\n(and should!) arm yourself with a downloaded copy for quick, offline reference.\n\n[1]: https://docs.python.org/3\n[2]: https://docs.python.org/3/download.html\n[3]: https://appacademy-open-assets.s3-us-west-1.amazonaws.com/Modular-Curriculum/content/python/topics/welcome/assets/python-documentation-home-page.png\n[4]: https://zealdocs.org/\n[5]: https://kapeli.com/dash\n[6]: https://velocity.silverlakesoftware.com/\n"
  },
  "success": true
}